#Building the application using Maven and Node.js
FROM maven:3.9.4-eclipse-temurin-11 as maven-java-node

# Setting the Maven configuration directory
ENV MAVEN_CONFIG=~/.m2

# Creating a directory for Node.js installation
RUN mkdir -p /usr/local/content/node
WORKDIR /usr/local/content/node

# Downloading and extract Node.js 18.16.1 and npm 9.5.1 binaries
ADD https://nodejs.org/dist/v18.16.1/node-v18.16.1-linux-x64.tar.gz .
RUN tar -xzf node-v18.16.1-linux-x64.tar.gz \
    && ln -s /usr/local/content/node/node-v18.16.1-linux-x64/bin/node /usr/local/bin/node \
    && ln -s /usr/local/content/node/node-v18.16.1-linux-x64/bin/npm /usr/local/bin/npm \
    && chown -R root:root /usr/local/content/node \
    && rm -fR node-v18.16.1-linux-x64.tar.gz

# Building the web application artifact from the first stage
FROM maven-java-node as webapp-artifact

# Creating a directory for the application in the container
RUN mkdir -p /usr/local/content/app

# Copying the application source code into the container
ADD ./ /usr/local/content/app

# Setting the working directory to the application directory
WORKDIR /usr/local/content/app

# Defining an argument for the build profile
ARG build_profile_name

# Setting an environment variable for the build profile
ENV profile=${build_profile_name}

# Building the application using Maven and the specified profile
RUN mvn clean install -P${profile}

# Deploy the application to Tomcat 
FROM tomcat:9.0.82

# Copying the WAR file from the previous stage into the Tomcat webapps directory
COPY --from=webapp-artifact /usr/local/content/app/target/*.war /usr/local/tomcat/webapps/

